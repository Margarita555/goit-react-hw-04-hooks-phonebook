{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","hooks/useLocalStarage.jsx","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetState","className","s","contactForm","preventDefault","label","input","type","onChange","pattern","title","required","btn","ContactList","contacts","onDeleteBtn","map","item","star","onClick","nanoid","Filter","filter","onFilterChange","App","key","defaultValue","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","app","find","alert","newContact","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70afc9d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3yDsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__UDYj0\",\"number\":\"ContactList_number__3fAyT\",\"btn\":\"ContactList_btn__2TOIT\",\"star\":\"ContactList_star__2wXyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__aD2_7\"};","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    resetState();\r\n  };\r\n\r\n  const resetState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.contactForm} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { nanoid } from 'nanoid';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteBtn }) => {\r\n  return (\r\n    <ul className={s.ContactList}>\r\n      {contacts.map(({ number, name }) => (\r\n        <li key={nanoid()} className={s.item}>\r\n          <span className={s.star}>&#10031;</span>\r\n          {name}:<span className={s.number}>{number}</span>\r\n          <button\r\n            className={s.btn}\r\n            onClick={() => onDeleteBtn(name)}\r\n            type=\"button\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onFilterChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport useLocalStorage from '../../hooks/useLocalStarage';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport s from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const handleAddContact = (name, number) => {\n    const isDuplicateContact = contacts.find(contact => contact.name === name);\n    if (isDuplicateContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    setContacts([newContact, ...contacts]);\n  };\n\n  const onFilterChange = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return visibleContacts;\n  };\n\n  const handleDeleteContact = name => {\n    setContacts(contacts.filter(contact => contact.name !== name));\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <div className={s.app}>\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} onSubmit={handleAddContact} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onFilterChange={onFilterChange} />\n      <ContactList\n        contacts={visibleContacts}\n        onDeleteBtn={handleDeleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}